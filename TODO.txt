
start thinking about logic-per-room architecture
    convert codebase to:
        - iterate through rooms and do per-room processes
        - do global processes (creep traveling between rooms, etc.)
            1. modelGame (done)
            2. modelCreep
            3. modelStorage
            4. modelTower
            5. modelEnergySources
            4. modelPickupFlag

creep spawning
    - continue spawning creep as long as storage is above a certain threshold

towers
    - attack logic
    - heal logic
    - repair logic

BUG: haulers indecisive about which extensions to store energy
    - fix back and forth loop bug

BUG: upgrader creep says 'upgrade' every game loop iteration
    - should be only when switching modes

programmatic extension construction site placement
    - hardcode offset map from Spawn1

analytics system - get insights into:
    - harvest/tick
    - storage/tick
    - controller upgrade/tick
    - construction/tick

road, walls, rampart building and maintenance
    - build road on path of haulers and upgraders (they should put down construction sites)
    - think about programmatic building of walls and ramparts

DEFENSE, DEFENSE, DEFENSE

capture and control of another room
    - claimer creep
    - capture room
    - multi-room logic (refactor from single-room)





